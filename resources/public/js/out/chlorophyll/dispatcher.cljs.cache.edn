;; Analyzed by ClojureScript 1.7.122
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name chlorophyll.dispatcher, :imports nil, :requires {cljs.core.async cljs.core.async, atom chlorophyll.atom, chlorophyll.atom chlorophyll.atom, bus chlorophyll.bus, chlorophyll.bus chlorophyll.bus, route chlorophyll.route, chlorophyll.route chlorophyll.route}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {when-storage {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/dispatcher.cljs", :line 10, :column 8, :end-line 10, :end-column 20, :private true, :arglists (quote ([v]))}, :private true, :name chlorophyll.dispatcher/when-storage, :variadic false, :file "src/cljs/chlorophyll/dispatcher.cljs", :end-column 20, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, start {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/dispatcher.cljs", :line 16, :column 7, :end-line 16, :end-column 12, :arglists (quote ([]))}, :name chlorophyll.dispatcher/start, :variadic false, :file "src/cljs/chlorophyll/dispatcher.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {am cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :default :recur}, :order [:recur :default :else]}, :doc nil}