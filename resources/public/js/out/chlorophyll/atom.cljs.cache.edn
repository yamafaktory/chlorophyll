;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name chlorophyll.atom, :imports nil, :requires {gstr goog.string, goog.string goog.string, reagent reagent.core, reagent.core reagent.core, util chlorophyll.util, chlorophyll.util chlorophyll.util}, :uses {atom reagent.core}, :defs {exist? {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 8, :column 8, :end-line 8, :end-column 14, :private true, :arglists (quote ([v])), :doc "Return the local storage value of key if exists."}, :private true, :name chlorophyll.atom/exist?, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 14, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Return the local storage value of key if exists."}, channel {:name chlorophyll.atom/channel, :file "src/cljs/chlorophyll/atom.cljs", :line 16, :column 1, :end-line 16, :end-column 17, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 16, :column 10, :end-line 16, :end-column 17}}, get-set-channel {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([] [v])), :doc "Multi-arity getter and setter for channel.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [v]), :arglists ([] [v]), :arglists-meta (nil nil)}}, :name chlorophyll.atom/get-set-channel, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [v]), :arglists ([] [v]), :arglists-meta (nil nil)}, :method-params ([] [v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists ([] [v]), :doc "Multi-arity getter and setter for channel."}, tiles {:name chlorophyll.atom/tiles, :file "src/cljs/chlorophyll/atom.cljs", :line 29, :column 1, :end-line 29, :end-column 15, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 29, :column 10, :end-line 29, :end-column 15}}, get-set-tile {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 33, :column 7, :end-line 33, :end-column 19, :arglists (quote ([i k] [i k v])), :doc "Multi-arity getter and setter for tiles.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([i k] [i k v]), :arglists ([i k] [i k v]), :arglists-meta (nil nil)}}, :name chlorophyll.atom/get-set-tile, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([i k] [i k v]), :arglists ([i k] [i k v]), :arglists-meta (nil nil)}, :method-params ([i k] [i k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists ([i k] [i k v]), :doc "Multi-arity getter and setter for tiles."}, add-tile {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 42, :column 7, :end-line 42, :end-column 15, :arglists (quote ([t c ch])), :doc "Add a new tile in the tiles atom."}, :name chlorophyll.atom/add-tile, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 15, :method-params ([t c ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t c ch])), :doc "Add a new tile in the tiles atom."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:content :channel :title}, :order [:title :content :channel]}, :doc nil}