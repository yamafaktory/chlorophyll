;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name chlorophyll.atom, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, util chlorophyll.util, chlorophyll.util chlorophyll.util}, :uses {atom reagent.core}, :defs {channel {:name chlorophyll.atom/channel, :file "src/cljs/chlorophyll/atom.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 7, :column 10, :end-line 7, :end-column 17}}, get-set-channel {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 10, :column 7, :end-line 10, :end-column 22, :arglists (quote ([] [v])), :doc "Multi-arity getter and setter for channel.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [v]), :arglists ([] [v]), :arglists-meta (nil nil)}}, :name chlorophyll.atom/get-set-channel, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [v]), :arglists ([] [v]), :arglists-meta (nil nil)}, :method-params ([] [v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists ([] [v]), :doc "Multi-arity getter and setter for channel."}, tiles {:name chlorophyll.atom/tiles, :file "src/cljs/chlorophyll/atom.cljs", :line 19, :column 1, :end-line 19, :end-column 15, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 19, :column 10, :end-line 19, :end-column 15}}, get-set-tile {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([i k] [i k v])), :doc "Multi-arity getter and setter for tiles.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([i k] [i k v]), :arglists ([i k] [i k v]), :arglists-meta (nil nil)}}, :name chlorophyll.atom/get-set-tile, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([i k] [i k v]), :arglists ([i k] [i k v]), :arglists-meta (nil nil)}, :method-params ([i k] [i k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists ([i k] [i k v]), :doc "Multi-arity getter and setter for tiles."}, add-tile {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([t c ch])), :doc "Add a new tile in the tiles atom."}, :name chlorophyll.atom/add-tile, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 15, :method-params ([t c ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t c ch])), :doc "Add a new tile in the tiles atom."}, sync {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/atom.cljs", :line 38, :column 7, :end-line 38, :end-column 11, :arglists (quote ([v])), :doc "Synchronize an atom after a callback from data-storage via the async dispatcher."}, :name chlorophyll.atom/sync, :variadic false, :file "src/cljs/chlorophyll/atom.cljs", :end-column 11, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Synchronize an atom after a callback from data-storage via the async dispatcher."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:content :channel :title :tiles}, :order [:channel :tiles :title :content]}, :doc nil}