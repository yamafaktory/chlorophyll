;; Analyzed by ClojureScript 1.7.28
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name chlorophyll.core, :imports nil, :requires {reagent reagent.core, atom chlorophyll.atom, chlorophyll.ui chlorophyll.ui, bus chlorophyll.bus, reagent.core reagent.core, fw figwheel.client, cljs.core.async cljs.core.async, chlorophyll.bus chlorophyll.bus, figwheel.client figwheel.client, ui chlorophyll.ui, chlorophyll.atom chlorophyll.atom}, :uses {atom reagent.core, <! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {main {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/core.cljs", :line 11, :column 7, :end-line 11, :end-column 11, :arglists (quote ([])), :doc "The main function is a loop that manages the channels."}, :name chlorophyll.core/main, :variadic false, :file "src/cljs/chlorophyll/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "The main function is a loop that manages the channels."}}, :require-macros {am cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :default :recur}, :order [:recur :default :else]}, :doc nil}