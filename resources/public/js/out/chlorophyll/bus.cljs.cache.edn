;; Analyzed by ClojureScript 1.7.122
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name chlorophyll.bus, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {errors {:name chlorophyll.bus/errors, :file "src/cljs/chlorophyll/bus.cljs", :line 7, :column 1, :end-line 7, :end-column 12, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/bus.cljs", :line 7, :column 6, :end-line 7, :end-column 12}}, events {:name chlorophyll.bus/events, :file "src/cljs/chlorophyll/bus.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/bus.cljs", :line 8, :column 6, :end-line 8, :end-column 12}}, storage {:name chlorophyll.bus/storage, :file "src/cljs/chlorophyll/bus.cljs", :line 9, :column 1, :end-line 9, :end-column 13, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/bus.cljs", :line 9, :column 6, :end-line 9, :end-column 13}}, dispatcher {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/bus.cljs", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([]))}, :name chlorophyll.bus/dispatcher, :variadic false, :file "src/cljs/chlorophyll/bus.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {am cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :default :recur}, :order [:recur :default :else]}, :doc nil}