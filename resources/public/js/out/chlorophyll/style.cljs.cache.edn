;; Analyzed by ClojureScript 1.7.28
{:use-macros nil, :excludes #{}, :name chlorophyll.style, :imports nil, :requires nil, :uses nil, :defs {reset {:name chlorophyll.style/reset, :file "src/cljs/chlorophyll/style.cljs", :line nil, :column nil, :end-line 6, :end-column 11, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 6, :column 6, :end-line 6, :end-column 11}, :doc "Components reset style utlity."}, rgba-lumen {:name chlorophyll.style/rgba-lumen, :file "src/cljs/chlorophyll/style.cljs", :line nil, :column nil, :end-line 11, :end-column 16, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 11, :column 6, :end-line 11, :end-column 16}, :doc "Generate a css rgba string to lighten or darken with alpha."}, rgba-random {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([])), :doc "Generate a css rgba property with random colors."}, :name chlorophyll.style/rgba-random, :variadic false, :file "src/cljs/chlorophyll/style.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Generate a css rgba property with random colors."}, rgba {:name chlorophyll.style/rgba, :file "src/cljs/chlorophyll/style.cljs", :line nil, :column nil, :end-line 21, :end-column 15, :doc "Create the corresponding rgba attribute\n  in order to lighten or darken an element.", :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 21, :column 11, :end-line 21, :end-column 15, :doc "Create the corresponding rgba attribute\n  in order to lighten or darken an element."}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:darken :default :lighten :type :padding :alpha :random :hierarchy :margin}, :order [:margin :padding :hierarchy :type :default :lighten :alpha :darken :random]}, :doc nil}