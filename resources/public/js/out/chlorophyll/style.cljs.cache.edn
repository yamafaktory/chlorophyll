;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name chlorophyll.style, :imports nil, :requires nil, :uses nil, :defs {reset {:name chlorophyll.style/reset, :file "src/cljs/chlorophyll/style.cljs", :line 6, :column 1, :end-line 6, :end-column 11, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 6, :column 6, :end-line 6, :end-column 11}, :doc "Components reset style utlity."}, padding {:name chlorophyll.style/padding, :file "src/cljs/chlorophyll/style.cljs", :line 13, :column 1, :end-line 13, :end-column 13, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 13, :column 6, :end-line 13, :end-column 13}, :doc "Common padding for components."}, rgba-lumen {:name chlorophyll.style/rgba-lumen, :file "src/cljs/chlorophyll/style.cljs", :line 19, :column 1, :end-line 19, :end-column 16, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 19, :column 6, :end-line 19, :end-column 16}, :doc "Generate a css rgba string to lighten or darken with alpha."}, rgba-random {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 24, :column 7, :end-line 24, :end-column 18, :arglists (quote ([])), :doc "Generate a css rgba property with random colors within the range [100 - 205]."}, :name chlorophyll.style/rgba-random, :variadic false, :file "src/cljs/chlorophyll/style.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Generate a css rgba property with random colors within the range [100 - 205]."}, rgba {:name chlorophyll.style/rgba, :file "src/cljs/chlorophyll/style.cljs", :line 31, :column 1, :end-line 31, :end-column 15, :doc "Create the corresponding rgba attribute\n  in order to lighten or darken an element.", :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 31, :column 11, :end-line 31, :end-column 15, :doc "Create the corresponding rgba attribute\n  in order to lighten or darken an element."}}, font-size {:protocol-inline nil, :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 50, :column 7, :end-line 50, :end-column 16, :arglists (quote ([s])), :doc "Return the given size in rem."}, :name chlorophyll.style/font-size, :variadic false, :file "src/cljs/chlorophyll/style.cljs", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Return the given size in rem."}, font {:name chlorophyll.style/font, :file "src/cljs/chlorophyll/style.cljs", :line 55, :column 1, :end-line 55, :end-column 15, :doc "Create the corresponding rgba attribute\n  in order to lighten or darken an element.", :meta {:file "/home/davy/Dev/chlorophyll/src/cljs/chlorophyll/style.cljs", :line 55, :column 11, :end-line 55, :end-column 15, :doc "Create the corresponding rgba attribute\n  in order to lighten or darken an element."}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:color :darken :big :default :lighten :type :vector :normal :size :small :padding :alpha :random :display :hierarchy :border :margin}, :order [:display :margin :padding :border :vector :color :hierarchy :type :default :lighten :alpha :darken :random :size :small :normal :big]}, :doc nil}